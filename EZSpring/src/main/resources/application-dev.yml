server:
  port: 8080

spring:
  datasource:
    username: root
    password: root001
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #Spring Boot 默认是不注入这些属性值的，需要自己绑定
    #druid 数据源专有配置
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
      filters: stat,wall,log4j
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  cache:
    ehcache:
      config: classpath:ehcache.xml
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java   # 重启的目录
      poll-interval: 3000   # 避免自动重新编译后404
      quiet-period: 1000
  web:
    resources:
      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/templates/
  thymeleaf:
    prefix: classpath:/templates/
    cache: false

  servlet:
    multipart:
      max-request-size: 10MB  # 上传文件总的最大值
      max-file-size: 10MB  # 单个文件的最大值

  # Spring Security
  security:
    user:
      name: root
      password: root001
      roles: admin
  # 国际化
  messages:
    basename: static/i18n/messages #相对路径 开头请勿添加斜杠
  # 缓存redis
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    ssl: ${REDIS_SSL:false}
    database: ${REDIS_DATABASE:0}
  # 消息队列Kafka
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: latest
      max-poll-records: 100
      max-partition-fetch-bytes: 1000000

mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml
  type-aliases-package: com.ervin.po

logging:
  level:
    com:
      example:
        mapper : debug

# Pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  # prometheus
  metrics:
    tags:
      application: ${spring.application.name}